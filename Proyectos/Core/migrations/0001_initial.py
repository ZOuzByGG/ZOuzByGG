# Generated by Django 4.2.7 on 2023-12-11 08:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('dificultad', models.CharField(choices=[('facil', 'Fácil'), ('intermedio', 'Intermedio'), ('alta', 'Alta')], max_length=20, verbose_name='Dificultad')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='actividades/', verbose_name='Imagen')),
                ('puntuacion_maxima', models.IntegerField(default=100, verbose_name='Puntuación Máxima')),
            ],
            options={
                'verbose_name_plural': 'Actividades',
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino'), ('Otro', ' Otro')], default='Otro', max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_usuario', models.CharField(choices=[('Padre', 'Padre'), ('Niño', 'Niño')], default='Niño', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='VinculoFamiliar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Vinculo Familiar',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(limit_value=8, message='La contraseña debe tener al menos 8 caracteres.'), django.core.validators.RegexValidator(message='La contraseña debe contener al menos un número, una mayúscula y un carácter especial.', regex='^(?=.*[0-9])(?=.*[A-Z])(?=.*[@#$%^&+=]).*$')], verbose_name='Contraseña')),
                ('username', models.CharField(error_messages={'unique': 'Ya existe un usuario con ese nombre de usuario.'}, help_text='Requerido. 150 caracteres o menos. Solo letras, dígitos y @/./+/-/_.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Nombre de Usuario')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombres')),
                ('lastname', models.CharField(blank=True, max_length=100, null=True, verbose_name='Apellido')),
                ('email', models.EmailField(default='', max_length=100, unique=True, verbose_name='Correo Electrónico')),
                ('puntuacion', models.IntegerField(default=0, verbose_name='Puntuación')),
                ('codigo_unico', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Código Único')),
                ('estado', models.CharField(choices=[('Habilitado', 'Habilitado'), ('No Habilitado', 'No Habilitado')], default='Habilitado', max_length=15, verbose_name='Estado')),
                ('limite_vinculos', models.IntegerField(default=1)),
                ('actividades_inscritas', models.ManyToManyField(related_name='usuarios_inscritos', to='Core.actividad', verbose_name='Actividades Inscritas')),
                ('familiares', models.ManyToManyField(through='Core.VinculoFamiliar', to=settings.AUTH_USER_MODEL)),
                ('genero', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.genero', verbose_name='Género')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='Core.rol', verbose_name='Rol')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='vinculofamiliar',
            name='usuario_principal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vinculos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vinculofamiliar',
            name='usuario_vinculado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vinculos_vinculados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PuntuacionUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntuacion', models.IntegerField(default=0)),
                ('fecha_ganado', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Puntuación de Usuario',
                'verbose_name_plural': 'Puntuaciones de Usuarios',
            },
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.actividad')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
